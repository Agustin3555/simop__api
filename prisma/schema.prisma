// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}


// ORGANIGRAMA **************************************************************************************************


model SubSecretaria {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  direcciones Direccion[]
}

model Direccion {
  // Fields -----------------------------------------------------------------------------------------------------
  id              Int       @id @default(autoincrement())
  nombre          String    @unique

  subSecretariaId Int?

  creado          DateTime  @default(now())
  modificado      DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  subSecretaria SubSecretaria?  @relation(fields: [subSecretariaId], references: [id], onDelete: SetNull)

  departamentos Departamento[]
}

model Departamento {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  direccionId Int?

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  direccion Direccion?  @relation(fields: [direccionId], references: [id], onDelete: SetNull)
}


// UBICACIÃ“N ****************************************************************************************************


model Pais {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  provincias      Provincia[]
  empresas        Empresa[]
  representantes  Representante[]
}

model Provincia {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String

  paisId      Int?

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  pais  Pais?  @relation(fields: [paisId], references: [id], onDelete: SetNull)

  localidades     Localidad[]
  empresas        Empresa[]
  representantes  Representante[]
}

model Localidad {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String

  provinciaId Int?

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  provincia Provincia?  @relation(fields: [provinciaId], references: [id], onDelete: SetNull)

  empresas        Empresa[]
  representantes  Representante[]
  obras           Obra[]
}


// TIPOS COMUNES ************************************************************************************************


model TipoProfesion {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  inspectores       RelInspectorTipoProfesion[]
  inspectoresObras  InspectorObra[]
}

model TipoRepresentante {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  representantesEmpresas  RepresentanteEmpresa[]
  representantesObras     RepresentanteObra[]
}

model TipoModificacion {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
}

model TipoParalizacion {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
}

model TipoTramite {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
}


// EMPRESA ******************************************************************************************************


model Empresa {
  // Fields -----------------------------------------------------------------------------------------------------
  id              Int       @id @default(autoincrement())
  cuit            Int?      @unique
  nombre          String    @unique
  direccion       String?
  numeroContacto  Int?
  email           String?

  paisId          Int?
  provinciaId     Int?
  localidadId     Int?

  creado          DateTime  @default(now())
  modificado      DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  pais            Pais?       @relation(fields: [paisId], references: [id], onDelete: SetNull)
  provincia       Provincia?  @relation(fields: [provinciaId], references: [id], onDelete: SetNull)
  localidad       Localidad?  @relation(fields: [localidadId], references: [id], onDelete: SetNull)

  representantesEmpresas  RepresentanteEmpresa[]
  obras                   Obra[]
}

model Representante {
  // Fields -----------------------------------------------------------------------------------------------------
  id                  Int       @id @default(autoincrement())
  cuil                Int?      @unique
  apellido            String
  nombre              String?
  direccion           String?
  numeroMatricula     String?   @unique

  paisId              Int?
  provinciaId         Int?
  localidadId         Int?

  creado              DateTime  @default(now())
  modificado          DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  pais              Pais?               @relation(fields: [paisId], references: [id], onDelete: SetNull)
  provincia         Provincia?          @relation(fields: [provinciaId], references: [id], onDelete: SetNull)
  localidad         Localidad?          @relation(fields: [localidadId], references: [id], onDelete: SetNull)

  empresas RepresentanteEmpresa[]
  obras    RepresentanteObra[]
}

model RepresentanteEmpresa {
  // Fields -----------------------------------------------------------------------------------------------------
  id                  Int       @id @default(autoincrement())
  vigencia            Boolean   @default(true)

  empresaId           Int?
  representanteId     Int?
  tipoRepresentanteId Int?

  creado              DateTime  @default(now())
  modificado          DateTime  @updatedAt

  @@unique([empresaId, representanteId, tipoRepresentanteId])

  // Relations --------------------------------------------------------------------------------------------------
  empresa           Empresa?            @relation(fields: [empresaId], references: [id], onDelete: SetNull)
  representante     Representante?      @relation(fields: [representanteId], references: [id], onDelete: SetNull)
  tipoRepresentante TipoRepresentante?  @relation(fields: [tipoRepresentanteId], references: [id], onDelete: SetNull)
}


// INSPECTOR ****************************************************************************************************


model Inspector {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  cuil        Int?      @unique
  apellido    String
  nombre      String?

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  profesiones   RelInspectorTipoProfesion[]
  obras         InspectorObra[]
  fojasMedicion FojaMedicion[]
}

model RelInspectorTipoProfesion {
  // Fields -----------------------------------------------------------------------------------------------------
  inspectorId     Int
  tipoProfesionId Int

  creado          DateTime  @default(now())
  modificado      DateTime  @updatedAt

  @@id([inspectorId, tipoProfesionId])

  // Relations --------------------------------------------------------------------------------------------------
  inspector     Inspector     @relation(fields: [inspectorId], references: [id], onDelete: Cascade)
  tipoProfesion TipoProfesion @relation(fields: [tipoProfesionId], references: [id], onDelete: Cascade)
}

model TipoInspector {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  inspectoresObras  InspectorObra[]
}


// OBRA *********************************************************************************************************


model TipoContratacionObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  obras Obra[]
}

model TipoFinanciamientoObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  obras Obra[]
}

model TipoProgramaObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  obras Obra[]
}

model TipoTematicaObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  obras Obra[]
}

model TipoEstadoObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id          Int       @id @default(autoincrement())
  nombre      String    @unique

  creado      DateTime  @default(now())
  modificado  DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  obras Obra[]
}

model Obra {
  // Fields -----------------------------------------------------------------------------------------------------
  id                              Int       @id @default(autoincrement())
  numero                          Int       @unique
  nombre                          String    @unique
  numeroExpediente                String?   @unique
  numeroResolucion                String?   @unique
  anioResolucion                  Int?
  numeroContratacion              Int?
  anioContratacion                Int?
  montoContratacion               Decimal?
  fechaInicio                     DateTime? @db.Date
  fechaFin                        DateTime? @db.Date
  plazoMeses                      Int?
  plazoDias                       Int?
  direccion                       String?
  lugar                           String?   @db.Text
  nomenclaturaCatastral           String?
  observaciones                   String?   @db.Text
  obraNueva                       Boolean   @default(true)
  porcentajeObraNueva             Float?
  metrosCuadradosObraNueva        Int?
  metrosLinealesObraNueva         Int?
  observacionesObraNueva          String?   @db.Text
  obraRefaccionada                Boolean   @default(false)
  porcentajeObraRefaccionada      Float?
  metrosCuadradosObraRefaccionada Int?
  metrosLinealesObraRefaccionada  Int?
  observacionesObraRefaccionada   String?   @db.Text

  empresaId                       Int?
  tipoContratacionObraId          Int?
  tipoFinanciamientoObraId        Int?
  tipoProgramaObraId              Int?
  tipoTematicaObraId              Int?
  tipoEstadoObraId                Int?
  localidadId                     Int?

  creado                          DateTime  @default(now())
  modificado                      DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  empresa                 Empresa?                @relation(fields: [empresaId], references: [id], onDelete: SetNull)
  tipoContratacionObra    TipoContratacionObra?   @relation(fields: [tipoContratacionObraId], references: [id], onDelete: SetNull)
  tipoFinanciamientoObra  TipoFinanciamientoObra? @relation(fields: [tipoFinanciamientoObraId], references: [id], onDelete: SetNull)
  tipoProgramaObra        TipoProgramaObra?       @relation(fields: [tipoProgramaObraId], references: [id], onDelete: SetNull)
  tipoTematicaObra        TipoTematicaObra?       @relation(fields: [tipoTematicaObraId], references: [id], onDelete: SetNull)
  tipoEstadoObra          TipoEstadoObra?         @relation(fields: [tipoEstadoObraId], references: [id], onDelete: SetNull)
  localidad               Localidad?              @relation(fields: [localidadId], references: [id], onDelete: SetNull)

  representantes  RepresentanteObra[]
  inspectores     InspectorObra[]
  fojasMedicion   FojaMedicion[]
}

model InspectorObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id              Int       @id @default(autoincrement())
  obraId          Int?
  inspectorId     Int?
  tipoInspectorId Int?
  tipoProfesionId Int?

  creado          DateTime  @default(now())
  modificado      DateTime  @updatedAt

  @@unique([obraId, inspectorId, tipoInspectorId, tipoProfesionId])

  // Relations --------------------------------------------------------------------------------------------------
  obra          Obra?           @relation(fields: [obraId], references: [id], onDelete: SetNull)
  inspector     Inspector?      @relation(fields: [inspectorId], references: [id], onDelete: SetNull)
  tipoInspector TipoInspector?  @relation(fields: [tipoInspectorId], references: [id], onDelete: SetNull)
  tipoProfesion TipoProfesion?  @relation(fields: [tipoProfesionId], references: [id], onDelete: SetNull)
}

model RepresentanteObra {
  // Fields -----------------------------------------------------------------------------------------------------
  id                  Int       @id @default(autoincrement())
  vigencia            Boolean   @default(true)

  obraId              Int?
  representanteId     Int?
  tipoRepresentanteId Int?

  creado              DateTime  @default(now())
  modificado          DateTime  @updatedAt

  @@unique([obraId, representanteId, tipoRepresentanteId])

  // Relations --------------------------------------------------------------------------------------------------
  obra              Obra?               @relation(fields: [obraId], references: [id], onDelete: SetNull)
  representante     Representante?      @relation(fields: [representanteId], references: [id], onDelete: SetNull)
  tipoRepresentante TipoRepresentante?  @relation(fields: [tipoRepresentanteId], references: [id], onDelete: SetNull)
}

model FojaMedicion {
  // Fields -----------------------------------------------------------------------------------------------------
  id                Int       @id @default(autoincrement())
  numero            Int
  numeroExpediente  String?   @unique
  avance            Float?
  fecha             DateTime? @db.Date
  observaciones     String?   @db.Text

  obraId            Int?
  inspectorId       Int?

  creado            DateTime  @default(now())
  modificado        DateTime  @updatedAt

  @@unique([obraId, numero])

  // Relations --------------------------------------------------------------------------------------------------
  obra      Obra?       @relation(fields: [obraId], references: [id], onDelete: SetNull)
  inspector Inspector?  @relation(fields: [inspectorId], references: [id], onDelete: SetNull)

  certificacion Certificacion?
}

model Certificacion {
  // Fields -----------------------------------------------------------------------------------------------------
  id                Int       @id @default(autoincrement())
  numeroExpediente  String?   @unique
  fecha             DateTime? @db.Date
  monto             Decimal?
  observaciones     String?   @db.Text

  fojaMedicionId    Int?      @unique

  creado            DateTime  @default(now())
  modificado        DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  fojaMedicion  FojaMedicion? @relation(fields: [fojaMedicionId], references: [id], onDelete: SetNull)

  pagosCertificacion PagoCertificacion[]
}

model PagoCertificacion {
  // Fields -----------------------------------------------------------------------------------------------------
  id                Int       @id @default(autoincrement())
  numero            Int
  fecha             DateTime? @db.Date
  monto             Decimal?
  observaciones     String?   @db.Text

  certificacionId   Int?

  creado            DateTime  @default(now())
  modificado        DateTime  @updatedAt

  // Relations --------------------------------------------------------------------------------------------------
  certificacion Certificacion?  @relation(fields: [certificacionId], references: [id], onDelete: SetNull)
}
